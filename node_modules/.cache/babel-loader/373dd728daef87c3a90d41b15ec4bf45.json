{"ast":null,"code":"var _jsxFileName = \"/home/pmpa/\\xC1rea de Trabalho/Curso Sujeito Programador/ReactJS/consumir-api/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tarefas, setTarefas] = useState([]);\n  const [input, setInput] = useState(''); // com [] vazio, a função é automaticamente executada quando mostrado na sreen\n\n  useEffect(() => {\n    const tarefasStrorage = localStorage.getItem('tarefas');\n\n    if (tarefasStrorage) {\n      setTarefas(JSON.parse(tarefasStrorage));\n    }\n  }, []); //executa a função quando [tarefas], é modificado\n\n  useEffect(() => {\n    localStorage.setItem('tarefas', JSON.stringify(tarefas));\n  }, [tarefas]); //Melhora o desempenho das funções com Hooks\n\n  const handleAdd = useCallback(() => {\n    setTarefas([...tarefas, input]);\n    setInput('');\n  }, [tarefas, input]); //Contando valores armazenados\n\n  const totalTarefas = useMemo(() => tarefas.length, [tarefas]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tarefas.map(tarefa => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tarefa\n      }, tarefa, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [\"Tu tens \", tarefas.length, \" tarefas! \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 60\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [\"Tu tens \", totalTarefas, \" tarefas! \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \"Adicionar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), console.log(tarefas)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"sTHNZUVd84+dsWLKD4RSGrvAcA8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pmpa/Área de Trabalho/Curso Sujeito Programador/ReactJS/consumir-api/src/App.js"],"names":["React","useState","useEffect","useMemo","useCallback","App","tarefas","setTarefas","input","setInput","tarefasStrorage","localStorage","getItem","JSON","parse","setItem","stringify","handleAdd","totalTarefas","length","map","tarefa","e","target","value","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,WAA9C,QAAiE,OAAjE;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CAHc,CAKf;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMQ,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAxB;;AAEA,QAAIF,eAAJ,EAAqB;AACnBH,MAAAA,UAAU,CAACM,IAAI,CAACC,KAAL,CAAWJ,eAAX,CAAD,CAAV;AACD;AACF,GANO,EAML,EANK,CAAT,CANe,CAcd;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACI,OAAb,CAAqB,SAArB,EAAgCF,IAAI,CAACG,SAAL,CAAeV,OAAf,CAAhC;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT,CAfc,CAmBd;;AACA,QAAMW,SAAS,GAAGb,WAAW,CAAC,MAAM;AACnCG,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaE,KAAb,CAAD,CAAV;AACCC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAH4B,EAG1B,CAACH,OAAD,EAAUE,KAAV,CAH0B,CAA7B,CApBc,CA0Bd;;AACA,QAAMU,YAAY,GAAGf,OAAO,CAAC,MAAMG,OAAO,CAACa,MAAf,EAAuB,CAACb,OAAD,CAAvB,CAA5B;AAEA,sBAEC;AAAA,4BACE;AAAA,gBACGA,OAAO,CAACc,GAAR,CAAaC,MAAD,iBACX;AAAA,kBAAkBA;AAAlB,SAASA,MAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAMQ;AAAA;AAAA;AAAA;AAAA,YANR,eAOM;AAAA,6BAAiBf,OAAO,CAACa,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPN,eAOyD;AAAA;AAAA;AAAA;AAAA,YAPzD,eAQM;AAAA,6BAAiBD,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YARN,eASM;AAAA;AAAA;AAAA;AAAA,YATN,eASY;AAAA;AAAA;AAAA;AAAA,YATZ,eAUE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEV,KAA1B;AAAiC,MAAA,QAAQ,EAAEc,CAAC,IAAIb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAAxD;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAQ,MAAA,OAAO,EAAEP,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAaGQ,OAAO,CAACC,GAAR,CAAYpB,OAAZ,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD;AAkBA;;GA/CQD,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\n \nfunction App() {\n \n const [tarefas, setTarefas] = useState([]);\n const [input, setInput] = useState('');\n\n// com [] vazio, a função é automaticamente executada quando mostrado na sreen\nuseEffect(() => {\n   const tarefasStrorage = localStorage.getItem('tarefas');\n\n   if (tarefasStrorage) {\n     setTarefas(JSON.parse(tarefasStrorage));\n   }\n }, [])\n\n //executa a função quando [tarefas], é modificado\n useEffect(() => {\n   localStorage.setItem('tarefas', JSON.stringify(tarefas));\n }, [tarefas])\n \n //Melhora o desempenho das funções com Hooks\n const handleAdd = useCallback(() => {\n  setTarefas([...tarefas, input])\n   setInput('');\n }, [tarefas, input]);\n \n\n //Contando valores armazenados\n const totalTarefas = useMemo(() => tarefas.length, [tarefas]);\n \n return (\n     \n  <div>\n    <ul>\n      {tarefas.map((tarefa) => (\n        <li key={tarefa}>{tarefa}</li>\n        ))}\n    </ul>\n    <br /><hr />\n        <strong>Tu tens {tarefas.length} tarefas! </strong><br />\n        <strong>Tu tens {totalTarefas} tarefas! </strong>\n        <hr /><br />\n    <input type=\"text\" value={input} onChange={e => setInput(e.target.value)} />\n    <button onClick={handleAdd}>Adicionar</button>\n \n    {console.log(tarefas)}\n  </div>\n );\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}